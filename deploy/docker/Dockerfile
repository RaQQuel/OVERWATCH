# Docker file for the OVERWATCH web app
FROM rehlers/overwatchBase:latest
MAINTAINER raymond.ehlers@cern.ch

# Setup OVERWATCH
# Download OVERWATCH and setup the needed python packages
RUN git clone https://github.com/raymondEhlers/OVERWATCH.git /overwatch \
        && cd /overwatch \
        && pip install -r /overwatch/requirements.txt

# Add bower, Polymer, webcomponents, jsRoot for OVERWATCH
RUN ln -s /usr/bin/nodejs /usr/bin/node \
        && npm install -g bower \
        && cd /overwatch/webApp/static \
        && bower --allow-root install \
        && cd /tmp && git clone https://github.com/linev/jsroot.git \
        && cd jsroot && git apply /overwatch/deploy/docker/jsRootPainterMoreDrawPaveFix.patch \
        && cp -r scripts /overwatch/webApp/static/. && cp -r style /overwatch/webApp/static/. \
        && rm -r /tmp/jsroot
        # Need to patch JsRootPainter.more.js

# Configure nginx
# Make NGINX run on the foreground and remove default site config
# Need -f since the file may not exist!
RUN echo "daemon off;" >> /etc/nginx/nginx.conf && rm /etc/nginx/sites-enabled/default
# Copy in nginx and gzip config
COPY nginxConf/*.conf /etc/nginx/conf.d/
COPY nginx.conf /etc/nginx/sites-enabled/.

# Configure OVERWATCH
# This file should be generated by setupServerParams.sh
COPY serverParams.py /overwatch/config/.
# Ensure that the proper configuration file is setup. The values should already be in the file!
RUN cp /overwatch/deploy/configOVERWATCH_stub.sh /overwatch/deploy/configOVERWATCH.sh
# Check for whether we are running with debug!
# TODO: Compile overwatch docs so that they are accessible for a docker hosted site!

# Configure supervisord
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# TEMP
# vim can always be installed later...

# Expose the ports for nginx and ZODB
EXPOSE 80 8090
CMD ["/usr/bin/supervisord"]
