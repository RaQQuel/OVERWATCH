# Docker file for the OVERWATCH web app
FROM ubuntu:latest
MAINTAINER raymond.ehlers@cern.ch

# Installed neede packages
# ROOT dependencies start from libncurses
run apt-get update && apt-get install -y \
        build-essential \
        git \
        python-dev \
        python-pip \
        nginx \
        ufw \
        supervisor \
        libncurses5-dev \
        gfortran \
        libperl-dev \
        libbz2-dev \
        libbison-dev \
        libssl-dev \
        byacc \
        flex \
        curl \
        swig \
        libglu1-mesa-dev \
        autotools-dev \
        autoconf \
        texinfo \
        pkg-config \
        autopoint \
        libtool-bin \
        cmake \
        libxml2-dev \
        zlib1g-dev \
        libfreetype6-dev \
        libxft-dev \
        libxpm-dev \
        environment-modules \
        npm \
    && rm -rf /var/lib/apt/lists/*
        # Can't use gsl because the version is incompatible
        # We delete the intermediate apt-get files once we are done
        # npm is for bower - see below

# Setup ROOT via aliBuild
# WARNING: This is a slow step - it has to clone and build root and all of it's dependencies!
# Remove the ROOT source and build files to save space!
RUN pip install aliBuild==1.4.0.rc1 \
        && mkdir /alice \
        && cd /alice \
        && aliBuild analytics off \
        && aliBuild -z root6 --defaults root6 init ROOT \
        && cd /alice/root6 && aliBuild -z -w ../sw --defaults root6 -d build ROOT \
        && cd /alice \
        && rm -r /alice/sw/BUILD \
        && rm -r /alice/sw/INSTALLROOT \
        && rm -r /alice/sw/MIRROR \
        && rm -r /alice/sw/SOURCES \
        && rm -r /alice/sw/SPECS \
        && rm -r /alice/sw/TARS \
        && rm -r /alice/root6

# Setup OVERWATCH
# Download OVERWATCH and setup the needed python packages
RUN git clone https://github.com/raymondEhlers/OVERWATCH.git /overwatch \
        && cd /overwatch \
        && pip install -r /overwatch/requirements.txt

# Add bower, Polymer, webcomponents, jsRoot for OVERWATCH
RUN ln -s /usr/bin/nodejs /usr/bin/node \
        && npm install -g bower \
        && cd /overwatch/webApp/static \
        && bower --allow-root install \
        && cd /tmp && git clone https://github.com/linev/jsroot.git \
        && cd jsroot && git apply /overwatch/deploy/docker/jsRootPainterMoreDrawPaveFix.patch \
        && cp -r scripts /overwatch/webApp/static/. && cp -r style /overwatch/webApp/static/. \
        && rm -r /tmp/jsroot
        # Need to patch JsRootPainter.more.js

# Configure nginx
# Make NGINX run on the foreground and remove default site config
# Need -f since the file may not exist!
RUN echo "daemon off;" >> /etc/nginx/nginx.conf && rm /etc/nginx/sites-enabled/default
# Copy in nginx and gzip config
COPY nginxConf/*.conf /etc/nginx/conf.d/
COPY nginx.conf /etc/nginx/sites-enabled/.

# Configure OVERWATCH
# This file should be generated by setupServerParams.sh
COPY serverParams.py /overwatch/config/.
# Ensure that the proper configuration file is setup. The values should already be in the file!
RUN cp /overwatch/deploy/configOVERWATCH_stub.sh /overwatch/deploy/configOVERWATCH.sh
# Check for whether we are running with debug!
# TODO: Compile overwatch docs so that they are accessible for a docker hosted site!

# Configure supervisord
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# TEMP
# vim can always be installed later...

# Expose the ports for nginx and ZODB
EXPOSE 80 8090
CMD ["/usr/bin/supervisord"]
