# Docker file for ALICE OVERWATCH
FROM rehlers/overwatch-base:latest
LABEL maintainer Raymond Ehlers <raymond.ehlers@cern.ch>, Yale University

# Additional installation (TODO: move to Dockerfile.build)
# - autossh is required for connecting to the HLT
# - wget is required for n (updated nodejs)
RUN apt-get update && apt-get install -y \
        autossh \
        wget \
    && rm -rf /var/lib/apt/lists/*

# AliEn Certs needed for EOS
COPY buildScripts/buildAlienCAs.sh /opt/scratch/buildScripts/buildAlienCAs.sh
RUN mkdir -p /opt/scratch/alienCAs && cd /opt/scratch/alienCAs \
        && git clone https://github.com/alisw/alien-cas.git . \
        && /opt/scratch/buildScripts/buildAlienCAs.sh /opt/scratch/alienCAs /opt/alienCAs \
        && rm -r /opt/scratch/alienCAs
ENV X509_CERT_DIR="/opt/alienCAs"

# Setup OVERWATCH
ENV OVERWATCH_ROOT /opt/overwatch
WORKDIR ${OVERWATCH_ROOT}
# Download OVERWATCH, setup the needed python packages, and compile the reciever
# Size increase here is mainly due to the numpy dependency
RUN git clone https://github.com/raymondEhlers/OVERWATCH.git . \
        && pip install --upgrade pip \
        && pip install -r requirements.txt \
        && echo "" \
        && mkdir -p receiver/build && cd receiver/build \
        && cmake "../" -DCMAKE_INSTALL_PREFIX="/opt/receiver" -DZEROMQ="/usr" \
        && make install
# Add receiver to path
ENV PATH="/opt/receiver/bin:${PATH}"
ENV LD_LIBRARY_PATH="/opt/receiver/lib:${LD_LIBRARY_PATH}"

# Add bower, polymer-bundler, Polymer, webcomponents, jsRoot for OVERWATCH
# bower is required for isntalling polymer packages (should move to yarn eventually).
# polymer-bundler is for combining polymer packages into one file for efficiency.
# n allows updates of nodejs, which is needed for polymer-bundler.
RUN ln -s /usr/bin/nodejs /usr/bin/node \
        && npm install -g bower polymer-bundler n \
        && n lts \
        && cd overwatch/webApp/static \
        && bower --allow-root install \
        && cd /tmp && git clone https://github.com/root-project/jsroot.git \
        && mkdir -p ${OVERWATCH_ROOT}/overwatch/webApp/static/jsRoot/ \
        && cp -r jsroot/scripts ${OVERWATCH_ROOT}/overwatch/webApp/static/jsRoot/. && cp -r jsroot/style ${OVERWATCH_ROOT}/overwatch/webApp/static/jsRoot/. \
        && rm -r /tmp/jsroot
        # Need to patch JsRootPainter.more.js
        #&& cd jsroot && git apply ${OVERWATCH_ROOT}/deploy/docker/jsRootPainterMoreDrawPaveFix.patch \

# TEMP
# vim can always be installed later if necessary...
#RUN apt-get update && apt-get install -y vim
# NOTE: Updating here will cause a problem if we make changes to the receiver
RUN git fetch && echo "" && git checkout deploy2017 && git pull
# ENDTEMP

# Configure OVERWATCH
# This file should be generated by setupServerParams.sh
#COPY serverParams.py /opt/overwatch/config/.
# Ensure that the proper configuration file is setup. The values should already be in the file!
#RUN cp /opt/overwatch/deploy/configOVERWATCH_stub.sh /opt/overwatch/deploy/configOVERWATCH.sh
# Check for whether we are running with debug!
# TODO: Compile overwatch docs so that they are accessible for a docker hosted site!

# Install OVERWATCH and the related scripts
# TODO: Move this up if possible
# NOTE: It must be done _after_ install the jsRoot dependencies
RUN pip install -e .

# Configure nginx
# Make NGINX run on the foreground and remove default site config
# Need -f since the file may not exist!
RUN echo "daemon off;" >> /etc/nginx/nginx.conf && rm /etc/nginx/sites-enabled/default
# Copy in nginx and gzip config
#COPY nginxConf/*.conf /etc/nginx/conf.d/
#COPY nginx.conf /etc/nginx/sites-enabled/.

# Configure supervisord
# This launches the Overwatch configuration and parsing script
COPY supervisord.conf ${OVERWATCH_ROOT}

# Expose the ports for nginx and ZODB
EXPOSE 80 8090
CMD ["/usr/bin/supervisord"]
