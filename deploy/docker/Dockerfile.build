# Set the python version here so that we can use it to set the base image.
ARG PYTHON_VERSION=2.7.15
# Docker file for the OVERWATCH web app
FROM python:${PYTHON_VERSION}-stretch
LABEL maintainer="Raymond Ehlers <raymond.ehlers@cern.ch>, Yale University"

# Make the python version available in the container.
ARG PYTHON_VERSION

# Needed to ensure that krb5-user installs successfully
# See: https://stackoverflow.com/a/39805151
ENV DEBIAN_FRONTEND noninteractive
# Installed neede packages
# ROOT dependencies from https://root.cern.ch/build-prerequisites
#   - The required dependencies span from git to python
#   - Optional are python-dev and libssl-dev (although libssl-dev is needed for xrootd)
#     and python-dev is required for Overwatch
#   - We can't use gsl because the version is incompatible -> MathMore lib is disabled
#   - npm (via nodejs) is for bower
#   - python-pip is required for overwatch
#   - supervisor is required for running multiple programs in docker
#   - nginx is required to serve the webapp
#   - zmq is required for the overwatch HLT receiver.
#         NOTE: libzmqq3-dev is actually version 4 (ie up to date)...
#   - libkrb5-dev and krb5-user are for kerberos (XRootD needs it for auth)
#   - rsync for installing the AliEn CAs.
# NOTE: Most of the dependencies are commented out because the python base image already
#       has these packages installed!
# NOTE: Need to setup the nodejs source before getting updates. We will install version 10.
RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \
    && apt-get update && apt-get install -y \
        #git \
        #dpkg-dev \
        cmake \
        #g++ \
        #gcc \
        #binutils \
        #libx11-dev \
        libxpm-dev \
        #libxft-dev \
        #libxext-dev \
        #libpng-dev \
        #libjpeg-dev \
        #libssl-dev \
        nodejs \
        nginx \
        libzmq3-dev \
        #libkrb5-dev \
        krb5-user \
        rsync \
    && rm -rf /var/lib/apt/lists/*
        # We delete the intermediate apt-get files once we are done

# Install supervisor.
# As of September 2018, the supervisor package on PyPI doesn't support python 3, so we take the master,
# which does (but perhaps has more bugs).
RUN /bin/bash -c 'if [[ "${PYTHON_VERSION}" == "2.7"* ]]; then pip install supervisor; else pip install git+https://github.com/Supervisor/supervisor.git#egg=supervisor; fi'

# Nothing further is configured here since this is just a base image!
CMD ["/bin/bash"]
