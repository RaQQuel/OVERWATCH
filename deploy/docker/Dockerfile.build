# Set the python version here so that we can use it to set the base image.
ARG PYTHON_VERSION=2.7.15
# Docker file for the OVERWATCH web app
FROM python:${PYTHON_VERSION}-stretch
LABEL maintainer="Raymond Ehlers <raymond.ehlers@cern.ch>, Yale University"

# Make the python version available in the container.
ARG PYTHON_VERSION

# Needed to ensure that krb5-user installs successfully
# See: https://stackoverflow.com/a/39805151
ENV DEBIAN_FRONTEND noninteractive
# Installed neede packages
# ROOT dependencies from https://root.cern.ch/build-prerequisites
#   - The required dependencies span from git to python
#   - Optional are python-dev and libssl-dev (although libssl-dev is needed for xrootd)
#     and python-dev is required for Overwatch
#   - We can't use gsl because the version is incompatible -> MathMore lib is disabled
#   - npm (via nodejs) is for bower
#   - python-pip is required for overwatch
#   - supervisor is required for running multiple programs in docker
#   - nginx is required to serve the webapp
#   - zmq is required for the overwatch HLT receiver.
#         NOTE: libzmqq3-dev is actually version 4 (ie up to date)...
#   - libkrb5-dev and krb5-user are for kerberos (XRootD needs it for auth)
#   - rsync for installing the AliEn CAs.
# NOTE: Most of the dependencies are commented out because the python base image already
#       has these packages installed!
# NOTE: Need to setup the nodejs source before getting updates. We will install version 10.
RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \
    && apt-get update && apt-get install -y \
        #git \
        #dpkg-dev \
        cmake \
        #g++ \
        #gcc \
        #binutils \
        #libx11-dev \
        libxpm-dev \
        #libxft-dev \
        #libxext-dev \
        #libpng-dev \
        #libjpeg-dev \
        #libssl-dev \
        nodejs \
        nginx \
        libzmq3-dev \
        #libkrb5-dev \
        krb5-user \
        rsync \
    && rm -rf /var/lib/apt/lists/*
        # We delete the intermediate apt-get files once we are done

# Install supervisor.
# As of September 2018, the supervisor package on PyPI doesn't support python 3, so we take the master,
# which does (but perhaps has more bugs).
RUN /bin/bash -c 'if [[ "${PYTHON_VERSION}" == "2.7"* ]]; then pip install supervisor; else pip install git+https://github.com/Supervisor/supervisor.git#egg=supervisor; fi'

# Setup directory structure
ENV SCRATCH /opt/scratch
RUN mkdir -p ${SCRATCH}

# AliEn Certs needed for EOS
COPY buildScripts/buildAlienCAs.sh /opt/scratch/buildScripts/buildAlienCAs.sh
RUN mkdir -p /opt/scratch/alienCAs && cd /opt/scratch/alienCAs \
        && git clone https://github.com/alisw/alien-cas.git . \
        && /opt/scratch/buildScripts/buildAlienCAs.sh /opt/scratch/alienCAs /opt/alienCAs \
        && rm -r /opt/scratch/alienCAs

# Install XRootD
COPY buildScripts/buildXRootD.sh ${SCRATCH}/buildScripts/buildXRootD.sh

RUN mkdir -p ${SCRATCH}/xrootd && cd ${SCRATCH}/xrootd \
        && chmod +x ${SCRATCH}/buildScripts/buildXRootD.sh \
        && git clone https://github.com/xrootd/xrootd.git . \
        && git checkout tags/v4.8.4 \
        && mkdir build && cd build \
        && ${SCRATCH}/buildScripts/buildXRootD.sh ../ /opt/xrootd \
        && make -j2 install \
        && rm -r ${SCRATCH}/xrootd
# Remove src and build files to keep container size down (since we can't cache the build process
# to speed up later compilation). Someday docker might support such a volume build cache which
# would make this split into two docker files particularly useful

# Setup environment variables for the build type.
# We set it here because we only care about the build type for ROOT (not XRootD).
# For development, it would probably be best to be "RelWithDebInfo"
ARG ROOT_CMAKE_BUILD_TYPE
ENV CMAKE_BUILD_TYPE ${ROOT_CMAKE_BUILD_TYPE:-"MINSIZEREL"}

# Install ROOT
COPY buildScripts/buildRoot.sh ${SCRATCH}/buildScripts/buildRoot.sh

RUN mkdir -p ${SCRATCH}/root && cd ${SCRATCH}/root \
        && chmod +x ${SCRATCH}/buildScripts/buildRoot.sh \
        && git clone https://github.com/root-project/root.git src \
        && cd src && git checkout tags/v6-10-08 && cd .. \
        && mkdir build && cd build \
        && ${SCRATCH}/buildScripts/buildRoot.sh ../src /opt/root ${PYTHON_VERSION} \
        && make -j2 install \
        && rm -r ${SCRATCH}/root
# Remove src and build files to keep container size down (since we can't cache the build process
# to speed up later compilation). Someday docker might support such a volume build cache which
# would make this split into two docker files particularly useful

# Nothing further is configured here since this is just a base image!
CMD ["/bin/bash"]
